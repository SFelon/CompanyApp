import {ACCESS_TOKEN, API_BASE_URL, AUTHENTICATED, AUTHENTICATION_ERROR } from "../constants";

const request = (options) => {
  const headers = new Headers({
    'Content-Type': 'application/json',
  });

  if(localStorage.getItem(ACCESS_TOKEN)) {
    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))
  }

  const defaults = {headers: headers};
  options = Object.assign({}, defaults, options);

  return fetch(options.url, options)
    .then(response =>
      response.json().then(json => {
        if(!response.ok) {
          return Promise.reject(json);
        }
        return json;
      })
    );
};

export function signInAction(loginRequest) {
  return (dispatch) => {
    try {
      request({
        url: API_BASE_URL + "/auth/signin",
        method: 'POST',
        body: JSON.stringify(loginRequest)
      });
      dispatch({ type: AUTHENTICATED });
      localStorage.setItem(ACCESS_TOKEN, response.accessToken);
    } catch (e) {
      dispatch({
        type: AUTHENTICATION_ERROR,
        payload: 'Invalid email or password',
      });
    }
  }
}

export function signUpAction(signupRequest) {
  return request({
    url: API_BASE_URL + "/auth/signup",
    method: 'POST',
    body: JSON.stringify(signupRequest)
  });
}
